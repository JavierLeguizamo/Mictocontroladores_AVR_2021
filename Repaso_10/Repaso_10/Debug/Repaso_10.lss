
Repaso_10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000134  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000e0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000134  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000164  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000001a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ba  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000071c  00000000  00000000  00000aae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ee  00000000  00000000  000011ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000084  00000000  00000000  000014b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d0  00000000  00000000  0000153c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ca  00000000  00000000  0000190c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b8  00000000  00000000  000019d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 57 00 	call	0xae	; 0xae <main>
  88:	0c 94 6e 00 	jmp	0xdc	; 0xdc <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <portB_OutputMode>:
{
	PORTB = output;
}
void portC_Output(uint8_t output)
{
	PORTC = output;
  90:	94 b1       	in	r25, 0x04	; 4
  92:	89 2b       	or	r24, r25
  94:	84 b9       	out	0x04, r24	; 4
  96:	08 95       	ret

00000098 <portC_OutputMode>:
  98:	97 b1       	in	r25, 0x07	; 7
  9a:	89 2b       	or	r24, r25
  9c:	87 b9       	out	0x07, r24	; 7
  9e:	08 95       	ret

000000a0 <setup>:
}

void setup()
{
	portB_OutputMode(0xFF);
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	0e 94 48 00 	call	0x90	; 0x90 <portB_OutputMode>
	portC_OutputMode(0x0f);
  a6:	8f e0       	ldi	r24, 0x0F	; 15
  a8:	0e 94 4c 00 	call	0x98	; 0x98 <portC_OutputMode>
  ac:	08 95       	ret

000000ae <main>:

int main(void)
{
	uint8_t number[]={ZERO,ONE,TWO,THREE,FOUR,FIVE};
	
    setup();
  ae:	0e 94 50 00 	call	0xa0	; 0xa0 <setup>
{
	PORTB = output;
}
void portC_Output(uint8_t output)
{
	PORTC = output;
  b2:	8f e0       	ldi	r24, 0x0F	; 15
  b4:	88 b9       	out	0x08, r24	; 8
  b6:	ef e0       	ldi	r30, 0x0F	; 15
	DDRC &= ~(pinMask);
}

 void portB_Output(uint8_t output)
{
	PORTB = output;
  b8:	7f e3       	ldi	r23, 0x3F	; 63
	portC_Output(0xf);
    while (1) 
    {
		portC_Output(0xf);
		portB_Output(number[0]);
		PORTC = ~1;//~0b00000001 -> 0b11111110
  ba:	6e ef       	ldi	r22, 0xFE	; 254
	DDRC &= ~(pinMask);
}

 void portB_Output(uint8_t output)
{
	PORTB = output;
  bc:	56 e0       	ldi	r21, 0x06	; 6
		portC_Output(0xf);
		portB_Output(number[0]);
		PORTC = ~1;//~0b00000001 -> 0b11111110
		//_delay_ms(60);
		portB_Output(number[1]);
		PORTC = ~2;
  be:	4d ef       	ldi	r20, 0xFD	; 253
	DDRC &= ~(pinMask);
}

 void portB_Output(uint8_t output)
{
	PORTB = output;
  c0:	3b e5       	ldi	r19, 0x5B	; 91
		//_delay_ms(60);
		portB_Output(number[1]);
		PORTC = ~2;
		//_delay_ms(60);
		portB_Output(number[2]);
		PORTC = ~4;
  c2:	2b ef       	ldi	r18, 0xFB	; 251
	DDRC &= ~(pinMask);
}

 void portB_Output(uint8_t output)
{
	PORTB = output;
  c4:	9f e4       	ldi	r25, 0x4F	; 79
		//_delay_ms(60);
		portB_Output(number[2]);
		PORTC = ~4;
		//_delay_ms(60);
		portB_Output(number[3]);
		PORTC = ~8;
  c6:	87 ef       	ldi	r24, 0xF7	; 247
{
	PORTB = output;
}
void portC_Output(uint8_t output)
{
	PORTC = output;
  c8:	e8 b9       	out	0x08, r30	; 8
	DDRC &= ~(pinMask);
}

 void portB_Output(uint8_t output)
{
	PORTB = output;
  ca:	75 b9       	out	0x05, r23	; 5
	portC_Output(0xf);
    while (1) 
    {
		portC_Output(0xf);
		portB_Output(number[0]);
		PORTC = ~1;//~0b00000001 -> 0b11111110
  cc:	68 b9       	out	0x08, r22	; 8
	DDRC &= ~(pinMask);
}

 void portB_Output(uint8_t output)
{
	PORTB = output;
  ce:	55 b9       	out	0x05, r21	; 5
		portC_Output(0xf);
		portB_Output(number[0]);
		PORTC = ~1;//~0b00000001 -> 0b11111110
		//_delay_ms(60);
		portB_Output(number[1]);
		PORTC = ~2;
  d0:	48 b9       	out	0x08, r20	; 8
	DDRC &= ~(pinMask);
}

 void portB_Output(uint8_t output)
{
	PORTB = output;
  d2:	35 b9       	out	0x05, r19	; 5
		//_delay_ms(60);
		portB_Output(number[1]);
		PORTC = ~2;
		//_delay_ms(60);
		portB_Output(number[2]);
		PORTC = ~4;
  d4:	28 b9       	out	0x08, r18	; 8
	DDRC &= ~(pinMask);
}

 void portB_Output(uint8_t output)
{
	PORTB = output;
  d6:	95 b9       	out	0x05, r25	; 5
		//_delay_ms(60);
		portB_Output(number[2]);
		PORTC = ~4;
		//_delay_ms(60);
		portB_Output(number[3]);
		PORTC = ~8;
  d8:	88 b9       	out	0x08, r24	; 8
  da:	f6 cf       	rjmp	.-20     	; 0xc8 <main+0x1a>

000000dc <_exit>:
  dc:	f8 94       	cli

000000de <__stop_program>:
  de:	ff cf       	rjmp	.-2      	; 0xde <__stop_program>
